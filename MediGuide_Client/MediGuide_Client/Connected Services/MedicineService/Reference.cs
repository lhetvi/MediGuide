//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediGuide_Client.MedicineService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/MediGuide")]
    [System.SerializableAttribute()]
    public partial class Medicine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdminIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DosageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymptomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdminId {
            get {
                return this.AdminIdField;
            }
            set {
                if ((this.AdminIdField.Equals(value) != true)) {
                    this.AdminIdField = value;
                    this.RaisePropertyChanged("AdminId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dosage {
            get {
                return this.DosageField;
            }
            set {
                if ((object.ReferenceEquals(this.DosageField, value) != true)) {
                    this.DosageField = value;
                    this.RaisePropertyChanged("Dosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicineId {
            get {
                return this.MedicineIdField;
            }
            set {
                if ((this.MedicineIdField.Equals(value) != true)) {
                    this.MedicineIdField = value;
                    this.RaisePropertyChanged("MedicineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName {
            get {
                return this.MedicineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineNameField, value) != true)) {
                    this.MedicineNameField = value;
                    this.RaisePropertyChanged("MedicineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symptoms {
            get {
                return this.SymptomsField;
            }
            set {
                if ((object.ReferenceEquals(this.SymptomsField, value) != true)) {
                    this.SymptomsField = value;
                    this.RaisePropertyChanged("Symptoms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usage {
            get {
                return this.UsageField;
            }
            set {
                if ((object.ReferenceEquals(this.UsageField, value) != true)) {
                    this.UsageField = value;
                    this.RaisePropertyChanged("Usage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MedicineService.IMedicineService")]
    public interface IMedicineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/AddMedicine", ReplyAction="http://tempuri.org/IMedicineService/AddMedicineResponse")]
        void AddMedicine(MediGuide_Client.MedicineService.Medicine medicine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/AddMedicine", ReplyAction="http://tempuri.org/IMedicineService/AddMedicineResponse")]
        System.Threading.Tasks.Task AddMedicineAsync(MediGuide_Client.MedicineService.Medicine medicine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/UpdateMedicine", ReplyAction="http://tempuri.org/IMedicineService/UpdateMedicineResponse")]
        void UpdateMedicine(MediGuide_Client.MedicineService.Medicine medicine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/UpdateMedicine", ReplyAction="http://tempuri.org/IMedicineService/UpdateMedicineResponse")]
        System.Threading.Tasks.Task UpdateMedicineAsync(MediGuide_Client.MedicineService.Medicine medicine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/DeleteMedicine", ReplyAction="http://tempuri.org/IMedicineService/DeleteMedicineResponse")]
        void DeleteMedicine(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/DeleteMedicine", ReplyAction="http://tempuri.org/IMedicineService/DeleteMedicineResponse")]
        System.Threading.Tasks.Task DeleteMedicineAsync(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/GetMedicineById", ReplyAction="http://tempuri.org/IMedicineService/GetMedicineByIdResponse")]
        MediGuide_Client.MedicineService.Medicine GetMedicineById(int medicineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicineService/GetMedicineById", ReplyAction="http://tempuri.org/IMedicineService/GetMedicineByIdResponse")]
        System.Threading.Tasks.Task<MediGuide_Client.MedicineService.Medicine> GetMedicineByIdAsync(int medicineId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicineServiceChannel : MediGuide_Client.MedicineService.IMedicineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicineServiceClient : System.ServiceModel.ClientBase<MediGuide_Client.MedicineService.IMedicineService>, MediGuide_Client.MedicineService.IMedicineService {
        
        public MedicineServiceClient() {
        }
        
        public MedicineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMedicine(MediGuide_Client.MedicineService.Medicine medicine) {
            base.Channel.AddMedicine(medicine);
        }
        
        public System.Threading.Tasks.Task AddMedicineAsync(MediGuide_Client.MedicineService.Medicine medicine) {
            return base.Channel.AddMedicineAsync(medicine);
        }
        
        public void UpdateMedicine(MediGuide_Client.MedicineService.Medicine medicine) {
            base.Channel.UpdateMedicine(medicine);
        }
        
        public System.Threading.Tasks.Task UpdateMedicineAsync(MediGuide_Client.MedicineService.Medicine medicine) {
            return base.Channel.UpdateMedicineAsync(medicine);
        }
        
        public void DeleteMedicine(int medicineId) {
            base.Channel.DeleteMedicine(medicineId);
        }
        
        public System.Threading.Tasks.Task DeleteMedicineAsync(int medicineId) {
            return base.Channel.DeleteMedicineAsync(medicineId);
        }
        
        public MediGuide_Client.MedicineService.Medicine GetMedicineById(int medicineId) {
            return base.Channel.GetMedicineById(medicineId);
        }
        
        public System.Threading.Tasks.Task<MediGuide_Client.MedicineService.Medicine> GetMedicineByIdAsync(int medicineId) {
            return base.Channel.GetMedicineByIdAsync(medicineId);
        }
    }
}
